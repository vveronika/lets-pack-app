{"version":3,"sources":["screens/Home/style.js","components/DecorationTile/style.js","components/DecorationTile/index.tsx","components/JourneyTile/style.js","components/JourneyTile/index.tsx","components/Button/style.js","components/Button/index.tsx","constants/informationData.tsx","screens/Home/index.tsx","screens/Form/style.js","redux/actions/journeys.ts","components/SearchableSelect/style.js","components/SearchableSelect/index.tsx","constants/formData.tsx","screens/Form/components/ChooseTileContainer/style.js","components/ChooseTile/style.js","components/ChooseTile/index.tsx","screens/Form/components/ChooseTileContainer/index.tsx","screens/Form/index.tsx","redux/actions/formData.ts","redux/actionTypes.ts","screens/UnderConstruction/style.js","screens/UnderConstruction/index.tsx","redux/reducers/formData.ts","redux/reducers/journeys.ts","redux/reducers/index.ts","redux/store.ts","components/TopBar/style.js","components/TopBar/index.tsx","style.js","components/Footer/style.js","components/Footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HomeWrapper","styled","div","HomeContent","TilesContainer","DestinationsContainer","TileWrapper","props","borderStyle","Title","Content","DecorationTile","title","content","JourneyTile","ButtonWrapper","button","ButtonLabel","Button","clickHandler","label","disabled","onClick","HOME_DECORATION_TILES","id","borderColor","connect","state","journeys","INFORMATION_DATA","map","tile","key","history","push","journey","FormWrapper","SelectsWrapper","SelectWrapper","SelectLabel","p","SearchableSelect","options","onChange","valueKey","isClearable","isSearchable","name","value","MONTHS","DURATION","decorationColor","STANDARD","ChooseTileWrapper","Tiles","Label","active","TileTitle","ChooseTile","onClickHandler","ChooseTileContainer","optionsArray","activityIndicator","item","FormScreen","fieldHandler","setState","formSubmit","country","month","duration","standard","formValid","this","fetchCountries","countriesSelectValues","countries","FORM_DATA","React","Component","dispatch","fetch","then","response","ok","Error","statusText","json","res","type","payload","catch","failed","Container","Subtitle","UnderConstructionScreen","initialState","reducer","action","combineReducers","countriesReducer","journeysReducer","middlewares","thunkMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","persistStore","BarWrapper","PageLogo","img","PageTitle","h1","PageSubTitle","TextWrapper","TopBar","subtitle","src","AppContainer","FooterWrapper","BaseText","IconWrapper","Highlight","Footer","App","createBrowserHistory","exact","path","component","HomeScreen","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c0fedc2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n    padding: 0 300px;\n`;\n\nexport const HomeContent = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 40px 0;\n`;\n\nexport const TilesContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 0 50px;\n`;\n\nexport const DestinationsContainer = styled.div`\n    display: flex;\n    \n`;\n","import styled from 'styled-components';\n\nexport const TileWrapper = styled.div`\n    height: 180px;\n    width: 180px;\n    border: 3px solid;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    border-color: ${props => props.borderStyle};\n    padding: 10px;\n`;\n\nexport const Title = styled.div`\n    margin-bottom: 10px;\n    font-family: 'Caveat', cursive;\n    color: #3A3A3A;\n    font-size: 28px;\n    text-align: center;\n`;\n\nexport const Content = styled.div`\n    font-family: 'Lato', sans-serif;\n    color: #3A3A3A;\n    font-size: 15px;\n    text-align: center;\n`;\n","import React from 'react';\nimport {\n    TileWrapper,\n    Title,\n    Content,\n} from './style';\n\ninterface IProps {\n    title: string,\n    content: string,\n    borderStyle: string,\n};\n\nconst DecorationTile: React.SFC<IProps> = ({\n    title,\n    content,\n    borderStyle\n}) => {\n  return (\n      <TileWrapper borderStyle={borderStyle}>\n          <Title>{title}</Title>\n          <Content>{content}</Content>\n      </TileWrapper>\n  );\n};\n\nexport default DecorationTile;\n","import styled from 'styled-components';\n\n// TODO: apply proper styles when adding journeys will work\nexport const TileWrapper = styled.div`\n    height: 200px;\n    width: 200px;\n    border: 1px solid #000;\n`;\n\nexport const Title = styled.div`\n\n`;","import React from 'react';\nimport {\n    TileWrapper,\n    Title,\n} from './style';\n\ninterface IProps {\n    title: string,\n};\n\nconst JourneyTile: React.SFC<IProps> = ({\n    title,\n}) => {\n  return (\n      <TileWrapper>\n          <Title>{title}</Title>\n      </TileWrapper>\n  );\n};\n\nexport default JourneyTile;\n","import styled from 'styled-components';\n\nexport const ButtonWrapper = styled.button`\n    background-color: #3a3a3a;\n    border: none;\n    margin-top: 20px;\n    transition: all .2s;\n\n    &:hover {\n        background-color: #272727;\n    }\n`;\n\nexport const ButtonLabel = styled.div`\n    color: #fff;\n    font-family: 'Caveat', cursive;\n    padding: 10px 20px;\n    font-size: 20px;\n`;","import React from 'react';\nimport {\n    ButtonWrapper,\n    ButtonLabel,\n} from './style';\n\ninterface IProps {\n    clickHandler: () => void,\n    label: string,\n    disabled?: boolean,\n};\n\nconst Button: React.SFC<IProps> = ({\n    clickHandler,\n    label,\n    disabled,\n}) => {\n  return (\n    <ButtonWrapper onClick={clickHandler} disabled={disabled}>\n        <ButtonLabel>{label}</ButtonLabel>\n    </ButtonWrapper>\n  );\n};\n\nexport default Button;\n\n\n","export const HOME_DECORATION_TILES = [\n  {\n    id: 1,\n    title: \"Fill the form\",\n    content: \"We need some information to help you decide, what you need on your holiday.\",\n    borderColor: \"#658e88\"\n  },\n  {\n    id: 2,\n    title: \"Pack your stuff\",\n    content: \"According the generated check-list pack your backpack.\",\n    borderColor: \"#5bb2a5\"\n  },\n  {\n    id: 3,\n    title: \"Enjoy your journey\",\n    content: \"... and don't worry that you forgot something important again!\",\n    borderColor: \"#0d605e\"\n  },\n];","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  HomeWrapper,\n  HomeContent,\n  TilesContainer,\n  DestinationsContainer,\n} from './style';\nimport DecorationTile from '../../components/DecorationTile';\nimport JourneyTile from '../../components/JourneyTile';\nimport Button from '../../components/Button';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as INFORMATION_DATA from '../../constants/informationData';\nimport { Journey } from '../../models/journey';\nimport { RootState } from '../../models/rootState';\n\ninterface IProps {\n  journeys: Journey[],\n}\n\ntype Props = IProps & RouteComponentProps;\n\nconst HomeScreen = (props: Props) => {\n\n  const goToForm = () => {\n    props.history.push('/form');\n  }\n\n  return (\n    <HomeWrapper>\n      <TilesContainer>\n        {INFORMATION_DATA.HOME_DECORATION_TILES.map(tile => (\n          <DecorationTile \n            key={tile.id}\n            title={tile.title}\n            content={tile.content}\n            borderStyle={tile.borderColor}\n          />\n        ))}\n      </TilesContainer>\n      <HomeContent>\n        <Button label=\"Fill a form\" clickHandler={goToForm} />\n      </HomeContent>\n      <DestinationsContainer>\n        {props.journeys.map(journey => (\n          <JourneyTile key={journey.id} title={journey.title} />\n        ))}\n      </DestinationsContainer>\n    </HomeWrapper>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => {\n  const journeys = state.journeys.journeys;\n  return {journeys};\n};\n\nexport default connect(mapStateToProps)(HomeScreen)","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0 500px;\n`;\n\nexport const SelectsWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`;","import * as types from '../actionTypes';\nimport { Journey } from '../../models/journey';\n\nconst addJourney = (payload: Journey) => {\n  return {\n    type: types.ADD_JOURNEY,\n    payload,\n  };\n};\n\nconst addJourneyAction = (payload: Journey) => (dispatch: any) => {\n  dispatch(addJourney(payload));\n};\n\nexport default {\n  addJourney: addJourneyAction,\n};\n","import styled from 'styled-components';\n\nexport const SelectWrapper = styled.div`\n    width: 200px;\n    z-index: 5;\n`;\n\nexport const SelectLabel = styled.p`\n    font-family: 'Caveat', cursive;\n    color: #3A3A3A;\n    font-size: 20px;\n    margin: 20px 0 10px;\n`;\n\n","import React from 'react';\nimport Select from 'react-select';\nimport {SelectWrapper, SelectLabel} from './style';\n\ninterface IProps {\n    options: any[],\n    label: string,\n    onChange: (valueKey: string, value: string) => void,\n    valueKey: string,\n}\n\nconst SearchableSelect: React.SFC<IProps> = ({options, label, onChange, valueKey}) => {\n  return (\n    <SelectWrapper>\n      <SelectLabel>\n        {label}\n      </SelectLabel>\n      <Select\n          isClearable\n          isSearchable\n          name=\"countrySelect\"\n          options={options}\n          onChange={(value) => onChange(valueKey, value)}\n      />\n    </SelectWrapper>\n  )\n}\n\nexport default SearchableSelect;\n","export const MONTHS = [\n    {\n        label: \"January\",\n        value: \"JAN\"\n    },\n    {\n        label: \"February\",\n        value: \"FEB\"\n    },\n    {\n        label: \"March\",\n        value: \"MAR\"\n    },\n    {\n        label: \"April\",\n        value: \"APR\"\n    },\n    {\n        label: \"May\",\n        value: \"MAY\"\n    },\n    {\n        label: \"June\",\n        value: \"JUN\"\n    },\n    {\n        label: \"July\",\n        value: \"JUL\"\n    },\n    {\n        label: \"August\",\n        value: \"AUT\"\n    },\n    {\n        label: \"September\",\n        value: \"SEP\"\n    },\n    {\n        label: \"October\",\n        value: \"OCT\"\n    },\n    {\n        label: \"November\",\n        value: \"NOV\"\n    },\n    {\n        label: \"December\",\n        value:   \"DEC\"\n    } \n];\n\nexport const DURATION = [\n    {\n      key: 1,\n      label: \"1 - 3 days\",\n      value: \"1-3\",\n      decorationColor: \"#658e88\",\n    },\n    {\n      key: 2,\n      label: \"4 - 7 days\",\n      value: \"4-7\",\n      decorationColor: \"#5bb2a5\",\n    },\n    {\n      key: 3,\n      label: \"more than 8 days\",\n      value: \"8\",\n      decorationColor: \"#0d605e\",\n    },\n  ];\n\nexport const STANDARD = [\n    {\n      key: 1,\n      label: \"Backpacker style\",\n      value: \"1\",\n      decorationColor: \"#658e88\",\n    },\n    {\n      key: 2,\n      label: \"Don't mind hostels\",\n      value: \"2\",\n      decorationColor: \"#5bb2a5\",\n    },\n    {\n      key: 3,\n      label: \"Only best hotels\",\n      value: \"3\",\n      decorationColor: \"#0d605e\",\n    },\n  ];","import styled from 'styled-components';\n\nexport const ChooseTileWrapper = styled.div`\n    width: 100%;\n    margin: 30px 0;\n`;\n\nexport const Tiles = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nexport const Label = styled.p`\n    text-align: center;\n    font-family: 'Caveat', cursive;\n    color: #3A3A3A;\n    font-size: 20px;\n    margin: 20px 0 5px;\n`;\n","import styled from 'styled-components';\n\nexport const TileWrapper = styled.div`\n    position: relative;\n    padding: 10px;\n    z-index: 1;\n    cursor: pointer;\n\n    &:before {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: ${props => props.active ? '100%' : '4px'};\n        width: 100%;\n        background: ${props => props.decorationColor};\n        z-index: -1;\n        transition: height .4s ease;\n    }\n\n    &:hover:before {\n        height: 100%;\n    }\n`;\n\nexport const TileTitle = styled.div`\n    font-family: 'Caveat', cursive;\n    color: ${props => props.active ? '#FFF' : '#3A3A3A'};\n    font-size: 20px;\n    transition: color .4s ease;\n`;\n","import React from 'react';\nimport {\n    TileWrapper,\n    TileTitle,\n} from './style';\n\ninterface IProps {\n    title: string,\n    active: boolean,\n    onClickHandler: (value: any) => void,\n    decorationColor: string,\n};\n\nconst ChooseTile: React.SFC<IProps> = ({\n    title,\n    active,\n    onClickHandler,\n    decorationColor,\n}) => {\n  return (\n      <TileWrapper onClick={onClickHandler} active={active} decorationColor={decorationColor}>\n          <TileTitle active={active}>\n              {title}\n          </TileTitle>\n      </TileWrapper>\n  );\n};\n\nexport default ChooseTile;\n","import React from 'react';\nimport {\n    ChooseTileWrapper,\n    Label,\n    Tiles,\n} from './style';\nimport ChooseTile from '../../../../components/ChooseTile';\n\ninterface IProps {\n    optionsArray: any[],\n    activityIndicator: string,\n    onClickHandler: (valueKey: string, value: any) => void,\n    label: string,\n    valueKey: string\n};\n\nconst ChooseTileContainer: React.SFC<IProps> = ({\n    optionsArray,\n    onClickHandler,\n    activityIndicator,\n    label,\n    valueKey,\n}) => {\n  return (\n    <ChooseTileWrapper>\n        <Label>{label}</Label>\n        <Tiles>\n            {optionsArray.map(item => (\n                <ChooseTile\n                    key={item.key}\n                    onClickHandler={() => onClickHandler(valueKey, item.value)}\n                    title={item.label}\n                    active={item.value === activityIndicator}\n                    decorationColor={item.decorationColor}\n                />\n            ))}\n        </Tiles>\n    </ChooseTileWrapper>\n  );\n};\n\nexport default ChooseTileContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  FormWrapper,\n  SelectsWrapper,\n} from './style';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { fetchCountries } from '../../redux/actions';\nimport SearchableSelect from '../../components/SearchableSelect';\nimport * as FORM_DATA from '../../constants/formData';\nimport ChooseTileContainer from './components/ChooseTileContainer';\nimport Button from '../../components/Button';\nimport { Country } from '../../models/country';\n\ninterface IProps {\n  countries: Country[],\n  fetchCountries: () => void;\n}\n\ninterface IState {\n  country: string,\n  month: string,\n  duration: string,\n  standard: string,\n  formValid: boolean,\n}\n\ntype Props = IProps & RouteComponentProps;\n\nclass FormScreen extends React.Component<Props, IState> {\n    constructor(props: Props) {\n      super(props);\n\n      this.state = {\n        country: \"\",\n        month: \"\",\n        duration: \"\",\n        standard: \"\",\n        formValid: false,\n      };\n    }\n\n    componentDidMount() {\n        this.props.fetchCountries();\n    }\n\n    fieldHandler = (key: any, value: string) => {\n      this.setState(state => ({\n        ...state,\n        [key]: value,\n      }));\n    }\n\n    formSubmit = () => {\n      this.props.history.push('./under-construction');\n    }\n\n    render() {\n      const countriesSelectValues = this.props.countries.map(country => ({\n        label: country.name,\n        value: country.name\n      }));\n      return (\n          <FormWrapper>\n            <SelectsWrapper>\n              <SearchableSelect\n                label=\"Choose your destination\"\n                options={countriesSelectValues}\n                onChange={this.fieldHandler}\n                valueKey=\"country\"\n              />\n              <SearchableSelect\n                label=\"When does your trip start?\"\n                options={FORM_DATA.MONTHS}\n                onChange={this.fieldHandler}\n                valueKey=\"month\"\n              />\n            </SelectsWrapper>\n            <ChooseTileContainer\n              label=\"For how long are you going?\"\n              optionsArray={FORM_DATA.DURATION}\n              activityIndicator={this.state.duration}\n              onClickHandler={this.fieldHandler}\n              valueKey=\"duration\"\n            />\n            <ChooseTileContainer\n              label=\"What kind of standard is suitable for you?\"\n              optionsArray={FORM_DATA.STANDARD}\n              activityIndicator={this.state.standard}\n              onClickHandler={this.fieldHandler}\n              valueKey=\"standard\"\n            />\n            <Button disabled={this.state.formValid} clickHandler={this.formSubmit} label=\"Let's pack!\" />\n          </FormWrapper> \n      );\n    }\n};\n\nconst mapStateToProps = (state: any) => {\n    return {\n        countries: state.countries.countries,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: Function) => {\n    return {\n      fetchCountries: () => dispatch(fetchCountries()),\n    };\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormScreen);","import * as actionTypes from '../actionTypes';\nimport { Country } from '../../models/country';\n\nfunction fetchCountriesFailed(failed: boolean) {\n    return {\n        type: actionTypes.FETCH_COUNTRIES_FAILED,\n        failed,\n    };\n}\n\nfunction fetchCountriesSuccess(payload: Country[]) {\n    return {\n        type: actionTypes.FETCH_COUNTRIES_SUCCESS,\n        payload\n    };\n}\n\nexport default function fetchCountries() {\n\n    return (dispatch: Function) => {\n        fetch(`https://restcountries.eu/rest/v2/all?fields=name;alpha2Code;alpha3Code;latlng;`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response;\n            })\n            .then((response) => response.json())\n            .then((res) => dispatch(fetchCountriesSuccess(res)))\n            .catch(() => dispatch(fetchCountriesFailed(true)));\n    };\n}\n","export const ADD_DESTINATION = 'ADD_DESTINATION';\nexport const FETCH_COUNTRIES_FAILED = 'FETCH_COUNTRIES_FAILED';\nexport const FETCH_COUNTRIES_SUCCESS = 'FETCH_COUNTRIES_SUCCESS';\nexport const ADD_JOURNEY = 'ADD_JOURNEY';\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 300px;\n    min-height: 42vh;\n`;\n\nexport const Title = styled.div`\n    font-family: 'Bangers', cursive;\n    color: #FF9939;\n    margin-bottom: 0;\n    font-size: 20px;\n`;\n\nexport const Subtitle = styled.div`\n    font-family: 'Caveat', cursive;\n    color: #3A3A3A;   \n    font-size: 27px;\n    text-align: center;\n`;\n","import React from 'react';\nimport {\n    Container,\n    Title,\n    Subtitle,\n} from './style';\n\nconst UnderConstructionScreen = () => {\n  return (\n      <Container>\n        <Title>Well, we're working on it...</Title>\n        <Subtitle>Application is still in development mode.\n            If your holiday is comming very soon, remember that good mood is the most important thing to take with you!</Subtitle>\n      </Container>\n  );\n};\n\nexport default UnderConstructionScreen;\n","import {FETCH_COUNTRIES_SUCCESS} from '../actionTypes';\n\nconst initialState = {\n  countries: [],\n};\n\nconst reducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case FETCH_COUNTRIES_SUCCESS:\n      return {\n        ...state,\n        countries: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import {ADD_JOURNEY} from '../actionTypes';\n\nconst initialState = {\n  journeys: [],\n};\n\nconst reducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case ADD_JOURNEY:\n      return {\n        ...state,\n        journeys: [...state.journeys, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport countriesReducer from './formData';\nimport journeysReducer from './journeys';\n\nexport default combineReducers({\n  countries: countriesReducer,\n  journeys: journeysReducer,\n});","import { applyMiddleware, compose, createStore } from 'redux';\nimport rootReducer from './reducers/index'\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunkMiddleware from 'redux-thunk';\n\nconst middlewares = [thunkMiddleware];\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  storage,\n  key: 'root',\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport const persistor = persistStore(store);\nexport default store;","import styled from 'styled-components';\n\nexport const BarWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 300px;\n`;\n\nexport const PageLogo = styled.img`\n    width: 300px;\n`;\n\nexport const PageTitle = styled.h1`\n    font-family: 'Bangers', cursive;\n    color: #FF9939;\n    margin-bottom: 0;\n    font-size: 90px;\n`;\n\nexport const PageSubTitle = styled.div`\n    font-family: 'Caveat', cursive;\n    color: #3A3A3A;   \n    font-size: 27px;\n    margin-top: -30px;\n`;\n\nexport const TextWrapper = styled.div`\n    display: block;\n`;\n","import React from 'react';\nimport {\n    BarWrapper,\n    PageLogo,\n    PageTitle,\n    PageSubTitle,\n    TextWrapper,\n} from './style';\n\ninterface IProps {\n    title: string,\n    subtitle: string,\n};\n\nconst TopBar: React.SFC<IProps> = ({\n    title,\n    subtitle,\n}) => {\n  return (\n      <BarWrapper>\n          <TextWrapper>\n            <PageTitle>{title}</PageTitle>\n            <PageSubTitle>{subtitle}</PageSubTitle>\n          </TextWrapper>\n              <PageLogo src=\"https://zloty-interes.pl/wp-content/uploads/2018/11/Travel-PNG-Clipart-1024x1024.png\" />\n      </BarWrapper>\n  );\n};\n\nexport default TopBar;\n","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n    background-color: #FFF9E0;\n    min-height: 100vh;\n`;\n\n","import styled from 'styled-components';\n\nexport const FooterWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    background-color: #3a3a3a;\n    padding: 30px;\n    margin-top: 40px;\n`;\n\nexport const BaseText = styled.div`\n    font-family: 'Lato', sans-serif;\n    padding-right: 3px;\n    color: #FFF;\n`;\n\nexport const IconWrapper = styled.div`\n    font-family: 'Lato', sans-serif;\n    padding-right: 3px;\n    color: #FFF;\n`;\n\nexport const Highlight = styled.div`\n    font-family: 'Lato', sans-serif;\n    padding-right: 3px;\n    color: #FFF;\n`;\n","import React from 'react';\nimport {\n    FooterWrapper,\n    BaseText,\n    IconWrapper,\n    Highlight,\n} from './style';\n\nconst Footer: React.SFC = () => {\n  return (\n      <FooterWrapper>\n          <BaseText>Made with </BaseText>\n          <IconWrapper>love</IconWrapper>\n          <BaseText>by </BaseText>\n          <Highlight>CSS Społem</Highlight>\n      </FooterWrapper>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport HomeScreen from './screens/Home';\nimport FormScreen from './screens/Form';\nimport UnderConstructionScreen from './screens/UnderConstruction';\nimport store from './redux/store';\nimport { createBrowserHistory } from 'history';\nimport TopBar from './components/TopBar';\nimport {AppContainer} from './style';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const history = createBrowserHistory();\n  return (\n    <Provider store={store}>\n      <AppContainer>\n        <TopBar title=\"Let's pack!\" subtitle=\"Get everything you need before your next journey\" />\n        <Router history={history}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={HomeScreen}\n            />\n            <Route\n              exact\n              path=\"/form\"\n              component={FormScreen}\n            />\n            <Route\n              exact\n              path=\"/under-construction\"\n              component={UnderConstructionScreen}\n            />\n          </Switch>\n        </Router>\n        <Footer />\n      </AppContainer>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}